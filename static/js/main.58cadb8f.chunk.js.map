{"version":3,"sources":["useFetchJobs.js","component/Job.js","component/JobsPagination.js","component/SearchForm.js","App.js","index.js"],"names":["ACTIONS","BASE_URL","reducer","state","action","type","loading","jobs","payload","error","hasNextPage","useFetchJobs","params","page","useReducer","dispatch","useEffect","cancelToken1","axios","CancelToken","source","get","cancelToken","token","markdown","then","res","data","catch","err","isCancel","paylod","cancelToken2","length","cancel","Job","job","useState","open","setOpen","Card","className","Body","Title","title","company","Subtitle","Date","created_at","toLocaleDateString","Badge","variant","location","style","wordBreak","how_to_apply","height","src","company_logo","alt","Text","Button","onClick","prevOpen","Collapse","in","description","JobsPagination","setPage","adjustPage","amount","prevPage","Pagination","Prev","Item","Ellipsis","active","Next","SearchForm","onParamChange","Form","classname","Row","Group","as","Col","Label","Control","onChange","value","name","xs","Check","full_time","id","lable","App","setParams","Container","e","param","target","prevParams","map","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.58cadb8f.chunk.js","sourcesContent":["import React, { useReducer, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst ACTIONS = {\r\n  MAKE_REQUEST: 'make_request',\r\n  GET_DATA: 'get_data',\r\n  ERROR: 'error',\r\n  UPDATE_HAS_NEXT_PAGE: 'update_has_Next_Page',\r\n};\r\n\r\nconst BASE_URL =\r\n  'https://cors-anywhere.herokuapp.com/https://jobs.github.com/positions.json';\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case ACTIONS.MAKE_REQUEST:\r\n      return {\r\n        loading: true,\r\n        jobs: [],\r\n      };\r\n    case ACTIONS.GET_DATA:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        jobs: action.payload.jobs,\r\n      };\r\n    case ACTIONS.ERROR:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: action.payload.error,\r\n        jobs: [],\r\n      };\r\n    case ACTIONS.UPDATE_HAS_NEXT_PAGE:\r\n      return {\r\n        ...state,\r\n        hasNextPage: action.payload.hasNextPage,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nfunction useFetchJobs(params, page) {\r\n  const [state, dispatch] = useReducer(reducer, {\r\n    jobs: [],\r\n    loading: true,\r\n  });\r\n\r\n  useEffect(() => {\r\n    const cancelToken1 = axios.CancelToken.source();\r\n    dispatch({ type: ACTIONS.MAKE_REQUEST });\r\n    axios\r\n      .get(BASE_URL, {\r\n        cancelToken: cancelToken1.token,\r\n        params: { markdown: true, page, ...params },\r\n      })\r\n      .then(res => {\r\n        dispatch({ type: ACTIONS.GET_DATA, payload: { jobs: res.data } });\r\n      })\r\n      .catch(err => {\r\n        if (axios.isCancel(err)) return;\r\n        dispatch({ type: ACTIONS.ERROR, paylod: { error: err } });\r\n      });\r\n\r\n    const cancelToken2 = axios.CancelToken.source();\r\n    axios\r\n      .get(BASE_URL, {\r\n        cancelToken: cancelToken2.token,\r\n        params: { markdown: true, page: page + 1, ...params },\r\n      })\r\n      .then(res => {\r\n        dispatch({\r\n          type: ACTIONS.UPDATE_HAS_NEXT_PAGE,\r\n          payload: { hasNextPage: res.data.length !== 0 },\r\n        });\r\n      })\r\n      .catch(err => {\r\n        if (axios.isCancel(err)) return;\r\n        dispatch({ type: ACTIONS.ERROR, paylod: { error: err } });\r\n      });\r\n\r\n    return () => {\r\n      cancelToken1.cancel();\r\n      cancelToken2.cancel();\r\n    };\r\n  }, [params, page]);\r\n\r\n  return state;\r\n}\r\n\r\nexport default useFetchJobs;\r\n","import React, { useState } from 'react';\r\nimport { Card, Badge, Button, Collapse } from 'react-bootstrap';\r\nimport ReactMarkdown from 'react-markdown';\r\n\r\nconst Job = ({ job }) => {\r\n  const [open, setOpen] = useState(false);\r\n  return (\r\n    <Card className='mb-3 bg-light'>\r\n      <Card.Body>\r\n        <div className='d-flex justify-content-between'>\r\n          <div>\r\n            <Card.Title>\r\n              {job.title} -{' '}\r\n              <span className='text-muted font-weight-light'>\r\n                {job.company}\r\n              </span>\r\n            </Card.Title>\r\n            <Card.Subtitle className='text-muted mb-2'>\r\n              {new Date(job.created_at).toLocaleDateString()}\r\n            </Card.Subtitle>\r\n            <Badge variant='success' className='mr-2'>\r\n              {job.type}\r\n            </Badge>\r\n            <Badge variant='secondary' className='mr-2'>\r\n              {job.location}\r\n            </Badge>\r\n            <div style={{ wordBreak: 'break-all' }}>\r\n              <ReactMarkdown source={job.how_to_apply} />\r\n            </div>\r\n          </div>\r\n          <img\r\n            className='d-none d-md-block'\r\n            height='50'\r\n            src={job.company_logo}\r\n            alt={job.company}\r\n          />\r\n        </div>\r\n        <Card.Text>\r\n          <Button variant='info' onClick={() => setOpen(prevOpen => !prevOpen)}>\r\n            {open ? 'Hide Details' : 'View Details'}\r\n          </Button>\r\n        </Card.Text>\r\n        <Collapse in={open}>\r\n          <div className='mt-4'>\r\n            <ReactMarkdown source={job.description} />\r\n          </div>\r\n        </Collapse>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Job;\r\n","import React from 'react';\r\nimport { Pagination } from 'react-bootstrap';\r\n\r\nconst JobsPagination = ({ page, setPage, hasNextPage }) => {\r\n  const adjustPage = amount => {\r\n    setPage(prevPage => prevPage + amount);\r\n  };\r\n\r\n  return (\r\n    <Pagination>\r\n      {page !== 1 && <Pagination.Prev onClick={() => adjustPage(-1)} />}\r\n      {page !== 1 && (\r\n        <Pagination.Item onClick={() => setPage(1)}>1</Pagination.Item>\r\n      )}\r\n      {page > 2 && <Pagination.Ellipsis />}\r\n      {page > 2 && (\r\n        <Pagination.Item onClick={() => adjustPage(-1)}>\r\n          {page - 1}\r\n        </Pagination.Item>\r\n      )}\r\n      <Pagination.Item active>{page}</Pagination.Item>\r\n      {hasNextPage && (\r\n        <Pagination.Item onClick={() => adjustPage(1)}>\r\n          {page + 1}\r\n        </Pagination.Item>\r\n      )}\r\n      {hasNextPage && <Pagination.Next onClick={() => adjustPage(1)} />}\r\n    </Pagination>\r\n  );\r\n};\r\n\r\nexport default JobsPagination;\r\n","import React from 'react';\r\nimport { Form, Col } from 'react-bootstrap';\r\n\r\nconst SearchForm = (params, onParamChange) => {\r\n  return (\r\n    <Form classname='mb-4'>\r\n      <Form.Row className='align-items-end'>\r\n        <Form.Group as={Col}>\r\n          <Form.Label>Description</Form.Label>\r\n          <Form.Control\r\n            onChange={onParamChange}\r\n            value={params.description}\r\n            name='description'\r\n            type='text'\r\n          />\r\n        </Form.Group>\r\n        <Form.Group as={Col}>\r\n          <Form.Label>Location</Form.Label>\r\n          <Form.Control\r\n            onChange={onParamChange}\r\n            value={params.location}\r\n            name='location'\r\n            type='text'\r\n          />\r\n        </Form.Group>\r\n        <Form.Group as={Col} xs='auto' className='ml-2'>\r\n          <Form.Check\r\n            onChange={onParamChange}\r\n            value={params.full_time}\r\n            name='full_time'\r\n            id='full_time'\r\n            lable='Only Full Time'\r\n            type='checkbox'\r\n            className='mb-2'\r\n          />\r\n        </Form.Group>\r\n      </Form.Row>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default SearchForm;\r\n","import React, { useState } from 'react';\nimport useFetchJobs from './useFetchJobs';\nimport { Container } from 'react-bootstrap';\nimport Job from './component/Job';\nimport JobsPagination from './component/JobsPagination';\nimport SearchForm from './component/SearchForm';\n\nconst App = () => {\n  const [params, setParams] = useState({});\n  const [page, setPage] = useState(1);\n  const { jobs, loading, error, hasNextPage } = useFetchJobs(params, page);\n\n  const handelParamChange = e => {\n    const param = e.target.name;\n    const value = e.target.value;\n    setParams(prevParams => {\n      return { ...prevParams, [param]: value };\n    });\n  };\n\n  return (\n    <Container className='my-4'>\n      <h1 variant='primary' className='mb-4'>\n        GitHub Jobs\n      </h1>\n      <SearchForm params={params} onParamChange={handelParamChange} />\n      <JobsPagination page={page} setPage={setPage} hasNextPage={hasNextPage} />\n      {loading && <h1>Loading...</h1>}\n      {error && <h1>Error, Try Refreshing.</h1>}\n      {jobs.map(job => {\n        return <Job key={job.id} job={job} />;\n      })}\n      <JobsPagination page={page} setPage={setPage} hasNextPage={hasNextPage} />\n    </Container>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}